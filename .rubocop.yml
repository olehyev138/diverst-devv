require: rubocop-performance

AllCops:
  TargetRubyVersion: 2.3
  # Rubocop has a ton of cops, disable by default and enable the ones we need
  DisabledByDefault: true
  Exclude:
    - '**/templates/**/*'
    - '**/vendor/**/*'
    - 'actionpack/lib/action_dispatch/journey/parser.rb'
    - 'railties/test/fixtures/tmp/**/*'
    - 'node_modules/**/*'
    # Additional exclude files by rubocop-rails_config
    - 'bin/**/*'
    - 'bin/*'
    - 'db/**/*'
    - 'db/*'

Performance:
  Exclude:
    - '**/test/**/*'
Rails:
  Enabled: true

Rails/Presence:
  Enabled: true

Rails/Present:
  Enabled: true

Rails/Blank:
  Enabled: true

# Use `User.find_by(name: 'Bruce')` over `User.where(name: 'Bruce').first`
Rails/FindBy:
  Enabled: true

# Use `User.all.find_each` over `User.all.each`
# The later has performance issues:
#   - https://stackoverflow.com/questions/30010091/in-rails-whats-the-difference-between-find-each-and-where
Rails/FindEach:
  Enabled: true

Metrics/LineLength:
  Max: 200

# Prefer &&/|| over and/or.
Style/AndOr:
  Enabled: true

# Align comments with method definitions.
Layout/CommentIndentation:
  Enabled: true

Layout/AlignArguments:
  Enabled: true

Layout/AlignArray:
  Enabled: true

Layout/AlignHash:
  Enabled: true

Layout/AlignParameters:
  Enabled: true

Layout/BlockAlignment:
  Enabled: true

Layout/DefEndAlignment:
  Enabled: true

Layout/ElseAlignment:
  Enabled: true

Layout/ConditionPosition:
  Enabled: true

Layout/DotPosition:
  Enabled: true

Layout/EmptyLineAfterGuardClause:
  Enabled: true

Layout/CaseIndentation:
  Enabled: true

Layout/EndOfLine:
  Enabled: true

Layout/RescueEnsureAlignment:
  Enabled: true

Layout/BlockEndNewline:
  Enabled: true

Layout/ClassStructure:
  Enabled: true

Layout/IndentationConsistency:
  Enabled: true

Layout/AccessModifierIndentation:
  Enabled: true

Layout/ClosingParenthesisIndentation:
  Enabled: true

Layout/EmptyLinesAroundAccessModifier:
  Enabled: true

# Align `end` with the matching keyword or starting expression except for
# assignments, where it should be aligned with the LHS.
Layout/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: variable
  AutoCorrect: true

Layout/ExtraSpacing:
  Enabled: true

Layout/EmptyLineBetweenDefs:
  Enabled: true

Layout/EmptyLineAfterMagicComment:
  Enabled: true

Layout/EmptyLinesAroundBlockBody:
  Enabled: true

# In a regular class definition, no empty lines around the body.
Layout/EmptyLinesAroundClassBody:
  Enabled: true

# In a regular method definition, no empty lines around the body.
Layout/EmptyLinesAroundMethodBody:
  Enabled: true

# In a regular module definition, no empty lines around the body.
Layout/EmptyLinesAroundModuleBody:
  Enabled: true

# Use Ruby >= 1.9 syntax for hashes. Prefer { a: :b } over { :a => :b }.
Style/HashSyntax:
  Enabled: ruby19

# Two spaces, no tabs (for indentation).
Layout/IndentationWidth:
  Enabled: true

Layout/LeadingCommentSpace:
  Enabled: true

Layout/SpaceAfterColon:
  Enabled: true

Layout/SpaceAfterComma:
  Enabled: true

Layout/SpaceAfterSemicolon:
  Enabled: true

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true

Layout/SpaceAroundKeyword:
  Enabled: true

Layout/SpaceAroundOperators:
  Enabled: true

Layout/SpaceBeforeComma:
  Enabled: true

Layout/SpaceBeforeFirstArg:
  Enabled: true

# Use `foo {}` not `foo{}`.
Layout/SpaceBeforeBlockBraces:
  Enabled: true

# Use `foo { bar }` not `foo {bar}`.
Layout/SpaceInsideBlockBraces:
  Enabled: true
  EnforcedStyleForEmptyBraces: space

# Use `{ a: 1 }` not `{a:1}`.
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true

Layout/SpaceInsideParens:
  Enabled: true

# Makes sure methods without arguments dont have parentheses
Style/DefWithParentheses:
  Enabled: true

# Check quotes usage according to lint rule below.
Style/StringLiterals:
  Enabled: true
  EnforcedStyle: single_quotes

# Detect hard tabs, no hard tabs.
Layout/Tab:
  Enabled: true

# Blank lines should not have any spaces.
Layout/TrailingBlankLines:
  Enabled: true

# No trailing whitespace.
Layout/TrailingWhitespace:
  Enabled: true

Lint/AmbiguousOperator:
  Enabled: true

Lint/AmbiguousRegexpLiteral:
  Enabled: true

Lint/ErbNewArguments:
  Enabled: true

# Enforces parentheses for methods with at least one parameter
Lint/RequireParentheses:
  Enabled: true

Lint/ShadowingOuterLocalVariable:
  Enabled: true

Lint/StringConversionInInterpolation:
  Enabled: true

Lint/UriEscapeUnescape:
  Enabled: true

Lint/UselessAssignment:
  Enabled: true

Lint/DeprecatedClassMethods:
  Enabled: true

Style/ParenthesesAroundCondition:
  Enabled: true

Style/RedundantBegin:
  Enabled: true

Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: true

Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: true

# Prefer Foo.method over Foo::method
Style/ColonMethodCall:
  Enabled: true

Style/TrivialAccessors:
  Enabled: true

Performance/FlatMap:
  Enabled: true

Performance/RedundantMerge:
  Enabled: true

Performance/StartWith:
  Enabled: true

Performance/EndWith:
  Enabled: true

Performance/RegexpMatch:
  Enabled: true

Performance/ReverseEach:
  Enabled: true

Performance/UnfreezeString:
  Enabled: true
