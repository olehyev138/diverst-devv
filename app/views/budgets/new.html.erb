<div class="content__header">
  <h1>New Budget Request</h1>
</div>

<div class="content__main">
  <%= simple_form_for @budget, url: group_budgets_path(@group), method: :post do |f| %>
    <div class="card">
      <div class="card__section">
        Your request will be sent to <b><%= @group.name %></b> financial manager for approval
      </div>
      <div class="card__section">
        <%= f.input :description, input_html: { autofocus: true } %>
      </div>
    </div>
    <div class="card">
      <div class="card__section card__section--border">
        <p>You can specify list of <strong>events</strong> you plan to organize with this budget (optional).</p>
      </div>
      <div id="fields">
        <%= f.simple_fields_for :budget_items do |item_form| %>
          <%= render 'budgets/item', f: item_form %>
        <% end %>
      </div>

      <div class="link">
        <div class="card__section card__section--border">
          <%= link_to_add_association "+Add Event", f, :budget_items, partial: 'budgets/item' %>
        </div>
      </div>
    </div>

    <div class="card">
      <div class="card__section card__section--border">
        <p>You may notify an <strong>approval manager</strong> for them to review and accept your budget request faster.</p>
      </div>
      <div class="card__section" >
        <br />
          <%= f.input :approver_id, as: :select, input_html: { class: "select2-field"} %>
      </div>
    </div>

    <%= f.button :submit, 'Send Budget Request' %>
    </div>
  <% end %>
</div>
<script>
$(document).on('ready page:load', function(){
    $('.select2-field').select2({
    ajax: {
      url: "<%= users_path(
          group_leaders:
          {
            :group_id => @group.id,
            :budget_approval => 1
          },
          policy_groups:
          {
            :budget_approval => 1,
            :manage_all => 1,
          },
          :limit => 10,
          :type => 'budget_permission',
          format: :json
        ) %>",
      theme: 'bootstrap',
      allowClear: true,
      type: "GET",
      dataType: "json",
      minimumInputLength: 3,
      multiple:true,
      delay: 1000,
      data: function (params) {
        var query = {
          search: {
            value: params.term
          }
        }
  
        // Query parameters will be ?search=[term]&type=public
        return query;
      },
      processResults: function (data) {
        var int = 1;
        
        // Tranforms the top-level key of the response object from 'items' to 'results'
        return {
          results: $.map(data.data, function(item){
            return {id: item[0], text: item[1] + " " + item[2] + " - " + item[3] } } )
        };
      },
      templateSelection: function(item) {
        return item[0]
      }
    }
  });
});
</script>