// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AdminLinks /> should render and match the snapshot 1`] = `
<nav>
  <Hidden
    mdUp={true}
  >
    <WithStyles(ForwardRef(Drawer))
      ModalProps={
        Object {
          "keepMounted": true,
        }
      }
      classes={
        Object {
          "paper": undefined,
        }
      }
      onClose={[Function]}
      open={true}
      variant="temporary"
    >
      <div />
      <WithStyles(ForwardRef(Divider)) />
      <WithStyles(Scrollbar)>
        <WithStyles(ForwardRef(List))>
          <WrappedComponent
            button={true}
            onClick={[Function]}
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <EqualizerIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))>
              <Memo(Connect(DiverstFormattedMessage))
                id="diverst.containers.Routes.admin.analyze.index"
              />
            </WithStyles(ForwardRef(ListItemText))>
            <ExpandMoreIcon />
          </WrappedComponent>
          <WithStyles(ForwardRef(Collapse))
            in={false}
            timeout="auto"
            unmountOnExit={true}
          >
            <WithStyles(ForwardRef(List))
              disablePadding={true}
            >
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                exact={true}
                to="/admin/analyze"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <ViewModuleIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.analyze.overview"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/analyze/users"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <PeopleIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.analyze.users"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/analyze/groups"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <SupervisedUserCircleIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.analyze.groups"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/analyze/custom"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <PollIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.analyze.custom"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
            </WithStyles(ForwardRef(List))>
          </WithStyles(ForwardRef(Collapse))>
          <WrappedComponent
            button={true}
            onClick={[Function]}
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <DeviceHubIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))>
              <Memo(Connect(DiverstFormattedMessage))
                id="diverst.containers.Routes.admin.manage.index"
              />
            </WithStyles(ForwardRef(ListItemText))>
            <ExpandMoreIcon />
          </WrappedComponent>
          <WithStyles(ForwardRef(Collapse))
            in={false}
            timeout="auto"
            unmountOnExit={true}
          >
            <WithStyles(ForwardRef(List))
              disablePadding={true}
            >
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/manage/groups"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <SupervisedUserCircleIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.manage.groups"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/manage/segments"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <LayersIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.manage.segments"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/manage/folders"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <PermMediaIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.manage.resources.index"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/manage/archived"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <ArchiveIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.manage.archived"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/manage/calendar"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <CalendarTodayIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.manage.calendar"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
            </WithStyles(ForwardRef(List))>
          </WithStyles(ForwardRef(Collapse))>
          <WrappedComponent
            button={true}
            onClick={[Function]}
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <AssignmentTurnedInIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))
              primary={
                <Memo(Connect(DiverstFormattedMessage))
                  id="diverst.containers.Routes.admin.plan.index"
                />
              }
            />
            <ExpandMoreIcon />
          </WrappedComponent>
          <WithStyles(ForwardRef(Collapse))
            in={false}
            timeout="auto"
            unmountOnExit={true}
          >
            <WithStyles(ForwardRef(List))
              disablePadding={true}
            >
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/plan/budgeting/list"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <AttachMoneyIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.plan.group_budgets"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/plan/budgeting/initialize"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <AttachMoneyIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.plan.budget_initialize"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
            </WithStyles(ForwardRef(List))>
          </WithStyles(ForwardRef(Collapse))>
          <WrappedComponent
            button={true}
            onClick={[Function]}
            show={false}
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <WbIncandescentIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))
              primary={
                <Memo(Connect(DiverstFormattedMessage))
                  id="diverst.containers.Routes.admin.innovate.index"
                />
              }
            />
            <ExpandMoreIcon />
          </WrappedComponent>
          <WithStyles(ForwardRef(Collapse))
            in={false}
            timeout="auto"
            unmountOnExit={true}
          >
            <WithStyles(ForwardRef(List))
              disablePadding={true}
            >
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                show={false}
                to="/admin/innovate/campaigns"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <ListIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.innovate.campaigns"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                show={false}
                to="/admin/innovate/financials"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <ListIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.innovate.financials"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
            </WithStyles(ForwardRef(List))>
          </WithStyles(ForwardRef(Collapse))>
          <WrappedComponent
            button={true}
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              }
            }
            to="/admin/polls"
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <HowToVoteIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))
              primary={
                <Memo(Connect(DiverstFormattedMessage))
                  id="diverst.containers.Routes.admin.include.index"
                />
              }
            />
          </WrappedComponent>
          <WrappedComponent
            button={true}
            show={false}
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <GroupWorkIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))
              primary={
                <Memo(Connect(DiverstFormattedMessage))
                  id="diverst.containers.Routes.admin.mentorship.index"
                />
              }
            />
          </WrappedComponent>
          <WithStyles(ForwardRef(Divider)) />
          <WrappedComponent
            button={true}
            onClick={[Function]}
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <SettingsIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))>
              <Memo(Connect(DiverstFormattedMessage))
                id="diverst.containers.Routes.admin.system.index"
              />
            </WithStyles(ForwardRef(ListItemText))>
            <ExpandMoreIcon />
          </WrappedComponent>
          <WithStyles(ForwardRef(Collapse))
            in={false}
            timeout="auto"
            unmountOnExit={true}
          >
            <WithStyles(ForwardRef(List))
              disablePadding={true}
            >
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                isActive={[Function]}
                to="/admin/system/settings"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <TuneIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.system.globalSettings"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/system/users"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <PeopleIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.system.users"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/system/branding"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <LandscapeIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.system.branding"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/system/logs"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <BookIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.system.logs"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
            </WithStyles(ForwardRef(List))>
          </WithStyles(ForwardRef(Collapse))>
          <WithStyles(ForwardRef(Divider)) />
        </WithStyles(ForwardRef(List))>
      </WithStyles(Scrollbar)>
    </WithStyles(ForwardRef(Drawer))>
  </Hidden>
  <Hidden
    smDown={true}
  >
    <WithStyles(ForwardRef(Drawer))
      classes={
        Object {
          "paper": undefined,
        }
      }
      open={true}
      variant="permanent"
    >
      <div />
      <WithStyles(ForwardRef(Divider)) />
      <WithStyles(Scrollbar)>
        <WithStyles(ForwardRef(List))>
          <WrappedComponent
            button={true}
            onClick={[Function]}
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <EqualizerIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))>
              <Memo(Connect(DiverstFormattedMessage))
                id="diverst.containers.Routes.admin.analyze.index"
              />
            </WithStyles(ForwardRef(ListItemText))>
            <ExpandMoreIcon />
          </WrappedComponent>
          <WithStyles(ForwardRef(Collapse))
            in={false}
            timeout="auto"
            unmountOnExit={true}
          >
            <WithStyles(ForwardRef(List))
              disablePadding={true}
            >
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                exact={true}
                to="/admin/analyze"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <ViewModuleIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.analyze.overview"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/analyze/users"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <PeopleIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.analyze.users"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/analyze/groups"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <SupervisedUserCircleIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.analyze.groups"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/analyze/custom"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <PollIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.analyze.custom"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
            </WithStyles(ForwardRef(List))>
          </WithStyles(ForwardRef(Collapse))>
          <WrappedComponent
            button={true}
            onClick={[Function]}
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <DeviceHubIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))>
              <Memo(Connect(DiverstFormattedMessage))
                id="diverst.containers.Routes.admin.manage.index"
              />
            </WithStyles(ForwardRef(ListItemText))>
            <ExpandMoreIcon />
          </WrappedComponent>
          <WithStyles(ForwardRef(Collapse))
            in={false}
            timeout="auto"
            unmountOnExit={true}
          >
            <WithStyles(ForwardRef(List))
              disablePadding={true}
            >
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/manage/groups"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <SupervisedUserCircleIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.manage.groups"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/manage/segments"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <LayersIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.manage.segments"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/manage/folders"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <PermMediaIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.manage.resources.index"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/manage/archived"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <ArchiveIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.manage.archived"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/manage/calendar"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <CalendarTodayIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.manage.calendar"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
            </WithStyles(ForwardRef(List))>
          </WithStyles(ForwardRef(Collapse))>
          <WrappedComponent
            button={true}
            onClick={[Function]}
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <AssignmentTurnedInIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))
              primary={
                <Memo(Connect(DiverstFormattedMessage))
                  id="diverst.containers.Routes.admin.plan.index"
                />
              }
            />
            <ExpandMoreIcon />
          </WrappedComponent>
          <WithStyles(ForwardRef(Collapse))
            in={false}
            timeout="auto"
            unmountOnExit={true}
          >
            <WithStyles(ForwardRef(List))
              disablePadding={true}
            >
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/plan/budgeting/list"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <AttachMoneyIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.plan.group_budgets"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/plan/budgeting/initialize"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <AttachMoneyIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.plan.budget_initialize"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
            </WithStyles(ForwardRef(List))>
          </WithStyles(ForwardRef(Collapse))>
          <WrappedComponent
            button={true}
            onClick={[Function]}
            show={false}
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <WbIncandescentIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))
              primary={
                <Memo(Connect(DiverstFormattedMessage))
                  id="diverst.containers.Routes.admin.innovate.index"
                />
              }
            />
            <ExpandMoreIcon />
          </WrappedComponent>
          <WithStyles(ForwardRef(Collapse))
            in={false}
            timeout="auto"
            unmountOnExit={true}
          >
            <WithStyles(ForwardRef(List))
              disablePadding={true}
            >
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                show={false}
                to="/admin/innovate/campaigns"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <ListIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.innovate.campaigns"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                show={false}
                to="/admin/innovate/financials"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <ListIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.innovate.financials"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
            </WithStyles(ForwardRef(List))>
          </WithStyles(ForwardRef(Collapse))>
          <WrappedComponent
            button={true}
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              }
            }
            to="/admin/polls"
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <HowToVoteIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))
              primary={
                <Memo(Connect(DiverstFormattedMessage))
                  id="diverst.containers.Routes.admin.include.index"
                />
              }
            />
          </WrappedComponent>
          <WrappedComponent
            button={true}
            show={false}
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <GroupWorkIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))
              primary={
                <Memo(Connect(DiverstFormattedMessage))
                  id="diverst.containers.Routes.admin.mentorship.index"
                />
              }
            />
          </WrappedComponent>
          <WithStyles(ForwardRef(Divider)) />
          <WrappedComponent
            button={true}
            onClick={[Function]}
          >
            <WithStyles(ForwardRef(ListItemIcon))>
              <SettingsIcon />
            </WithStyles(ForwardRef(ListItemIcon))>
            <WithStyles(ForwardRef(ListItemText))>
              <Memo(Connect(DiverstFormattedMessage))
                id="diverst.containers.Routes.admin.system.index"
              />
            </WithStyles(ForwardRef(ListItemText))>
            <ExpandMoreIcon />
          </WrappedComponent>
          <WithStyles(ForwardRef(Collapse))
            in={false}
            timeout="auto"
            unmountOnExit={true}
          >
            <WithStyles(ForwardRef(List))
              disablePadding={true}
            >
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                isActive={[Function]}
                to="/admin/system/settings"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <TuneIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.system.globalSettings"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/system/users"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <PeopleIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.system.users"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/system/branding"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <LandscapeIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.system.branding"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
              <WrappedComponent
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                to="/admin/system/logs"
              >
                <WithStyles(ForwardRef(ListItemIcon))>
                  <BookIcon />
                </WithStyles(ForwardRef(ListItemIcon))>
                <WithStyles(ForwardRef(ListItemText))>
                  <Memo(Connect(DiverstFormattedMessage))
                    id="diverst.containers.Routes.admin.system.logs"
                  />
                </WithStyles(ForwardRef(ListItemText))>
              </WrappedComponent>
            </WithStyles(ForwardRef(List))>
          </WithStyles(ForwardRef(Collapse))>
          <WithStyles(ForwardRef(Divider)) />
        </WithStyles(ForwardRef(List))>
      </WithStyles(Scrollbar)>
    </WithStyles(ForwardRef(Drawer))>
  </Hidden>
</nav>
`;
