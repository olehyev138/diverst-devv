// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AdminLinks /> should render and match the snapshot 1`] = `
<nav>
  <Hidden
    mdUp={true}
  >
    <WithStyles(ForwardRef(Drawer))
      ModalProps={
        Object {
          "keepMounted": true,
        }
      }
      classes={
        Object {
          "paper": undefined,
        }
      }
      onClose={[Function]}
      open={true}
      variant="temporary"
    >
      <div />
      <WithStyles(ForwardRef(Divider)) />
      <WithStyles(ForwardRef(List))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <EqualizerIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))>
            <Memo(DiverstFormattedMessage)
              id="diverst.containers.Routes.admin.analyze.index"
            />
          </WithStyles(ForwardRef(ListItemText))>
          <ExpandMoreIcon />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(Collapse))
          in={false}
          timeout="auto"
          unmountOnExit={true}
        >
          <WithStyles(ForwardRef(List))
            disablePadding={true}
          >
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              exact={true}
              to="/admin/analyze"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.analyze.overview"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/analyze/users"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.analyze.users"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/analyze/groups"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.analyze.groups"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/analyze/custom"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.analyze.custom"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
          </WithStyles(ForwardRef(List))>
        </WithStyles(ForwardRef(Collapse))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <DeviceHubIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))>
            <Memo(DiverstFormattedMessage)
              id="diverst.containers.Routes.admin.manage.index"
            />
          </WithStyles(ForwardRef(ListItemText))>
          <ExpandMoreIcon />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(Collapse))
          in={false}
          timeout="auto"
          unmountOnExit={true}
        >
          <WithStyles(ForwardRef(List))
            disablePadding={true}
          >
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/manage/groups"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.manage.groups"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/manage/segments"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.manage.segments"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/manage/folders"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.manage.resources.index"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/manage/archived"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.manage.archived"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
          </WithStyles(ForwardRef(List))>
        </WithStyles(ForwardRef(Collapse))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <AssignmentTurnedInIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))
            primary={
              <Memo(DiverstFormattedMessage)
                id="diverst.containers.Routes.admin.plan.index"
              />
            }
          />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <WbIncandescentIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))
            primary={
              <Memo(DiverstFormattedMessage)
                id="diverst.containers.Routes.admin.innovate.index"
              />
            }
          />
          <ExpandMoreIcon />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(Collapse))
          in={false}
          timeout="auto"
          unmountOnExit={true}
        >
          <WithStyles(ForwardRef(List))
            disablePadding={true}
          >
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/innovate/campaigns"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.innovate.campaigns"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/innovate/financials"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.innovate.financials"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
          </WithStyles(ForwardRef(List))>
        </WithStyles(ForwardRef(Collapse))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <HowToVoteIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))
            primary={
              <Memo(DiverstFormattedMessage)
                id="diverst.containers.Routes.admin.include.index"
              />
            }
          />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <GroupWorkIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))
            primary={
              <Memo(DiverstFormattedMessage)
                id="diverst.containers.Routes.admin.mentorship.index"
              />
            }
          />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(Divider)) />
        <WithStyles(ForwardRef(ListItem))
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <SettingsIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))>
            <Memo(DiverstFormattedMessage)
              id="diverst.containers.Routes.admin.system.index"
            />
          </WithStyles(ForwardRef(ListItemText))>
          <ExpandMoreIcon />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(Collapse))
          in={false}
          timeout="auto"
          unmountOnExit={true}
        >
          <WithStyles(ForwardRef(List))
            disablePadding={true}
          >
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              isActive={[Function]}
              to="/admin/system/settings/fields"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.system.globalSettings"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/system/users"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.system.users"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/system/branding/theme"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.system.branding"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="#"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.system.logs"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="#"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.system.diversity"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
          </WithStyles(ForwardRef(List))>
        </WithStyles(ForwardRef(Collapse))>
        <WithStyles(ForwardRef(Divider)) />
      </WithStyles(ForwardRef(List))>
    </WithStyles(ForwardRef(Drawer))>
  </Hidden>
  <Hidden
    smDown={true}
  >
    <WithStyles(ForwardRef(Drawer))
      classes={
        Object {
          "paper": undefined,
        }
      }
      open={true}
      variant="permanent"
    >
      <div />
      <WithStyles(ForwardRef(Divider)) />
      <WithStyles(ForwardRef(List))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <EqualizerIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))>
            <Memo(DiverstFormattedMessage)
              id="diverst.containers.Routes.admin.analyze.index"
            />
          </WithStyles(ForwardRef(ListItemText))>
          <ExpandMoreIcon />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(Collapse))
          in={false}
          timeout="auto"
          unmountOnExit={true}
        >
          <WithStyles(ForwardRef(List))
            disablePadding={true}
          >
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              exact={true}
              to="/admin/analyze"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.analyze.overview"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/analyze/users"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.analyze.users"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/analyze/groups"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.analyze.groups"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/analyze/custom"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.analyze.custom"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
          </WithStyles(ForwardRef(List))>
        </WithStyles(ForwardRef(Collapse))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <DeviceHubIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))>
            <Memo(DiverstFormattedMessage)
              id="diverst.containers.Routes.admin.manage.index"
            />
          </WithStyles(ForwardRef(ListItemText))>
          <ExpandMoreIcon />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(Collapse))
          in={false}
          timeout="auto"
          unmountOnExit={true}
        >
          <WithStyles(ForwardRef(List))
            disablePadding={true}
          >
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/manage/groups"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.manage.groups"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/manage/segments"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.manage.segments"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/manage/folders"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.manage.resources.index"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/manage/archived"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.manage.archived"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
          </WithStyles(ForwardRef(List))>
        </WithStyles(ForwardRef(Collapse))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <AssignmentTurnedInIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))
            primary={
              <Memo(DiverstFormattedMessage)
                id="diverst.containers.Routes.admin.plan.index"
              />
            }
          />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <WbIncandescentIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))
            primary={
              <Memo(DiverstFormattedMessage)
                id="diverst.containers.Routes.admin.innovate.index"
              />
            }
          />
          <ExpandMoreIcon />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(Collapse))
          in={false}
          timeout="auto"
          unmountOnExit={true}
        >
          <WithStyles(ForwardRef(List))
            disablePadding={true}
          >
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/innovate/campaigns"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.innovate.campaigns"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/innovate/financials"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.innovate.financials"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
          </WithStyles(ForwardRef(List))>
        </WithStyles(ForwardRef(Collapse))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <HowToVoteIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))
            primary={
              <Memo(DiverstFormattedMessage)
                id="diverst.containers.Routes.admin.include.index"
              />
            }
          />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItem))
          button={true}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <GroupWorkIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))
            primary={
              <Memo(DiverstFormattedMessage)
                id="diverst.containers.Routes.admin.mentorship.index"
              />
            }
          />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(Divider)) />
        <WithStyles(ForwardRef(ListItem))
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(ListItemIcon))>
            <SettingsIcon />
          </WithStyles(ForwardRef(ListItemIcon))>
          <WithStyles(ForwardRef(ListItemText))>
            <Memo(DiverstFormattedMessage)
              id="diverst.containers.Routes.admin.system.index"
            />
          </WithStyles(ForwardRef(ListItemText))>
          <ExpandMoreIcon />
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(Collapse))
          in={false}
          timeout="auto"
          unmountOnExit={true}
        >
          <WithStyles(ForwardRef(List))
            disablePadding={true}
          >
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              isActive={[Function]}
              to="/admin/system/settings/fields"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.system.globalSettings"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/system/users"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.system.users"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="/admin/system/branding/theme"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.system.branding"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="#"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.system.logs"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              to="#"
            >
              <WithStyles(ForwardRef(ListItemIcon))>
                <ListIcon />
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))>
                <Memo(DiverstFormattedMessage)
                  id="diverst.containers.Routes.admin.system.diversity"
                />
              </WithStyles(ForwardRef(ListItemText))>
            </WithStyles(ForwardRef(MenuItem))>
          </WithStyles(ForwardRef(List))>
        </WithStyles(ForwardRef(Collapse))>
        <WithStyles(ForwardRef(Divider)) />
      </WithStyles(ForwardRef(List))>
    </WithStyles(ForwardRef(Drawer))>
  </Hidden>
</nav>
`;
