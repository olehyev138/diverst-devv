version: 2.1
executors:
  primary-image:
    docker:
      - image: awsdiverst/cci-primary:0.0.1
        environment:
          RAILS_ENV: test
          RACK_ENV: test
jobs:
  lint:
    working_directory: ~/TeamDiverst/diverst-development
    shell: /bin/bash --login
    executor: primary-image
    steps:
      - checkout
      #
      ## Install gems
      #
      - restore_cache:
          keys:
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-
            - v1-gem-cache-{{ arch }}-
      - run:
          name: Install gems
          command: bundle install --path=vendor/bundle --jobs=4 --retry=3 && bundle clean
      - save_cache:
          key: v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      #
      ## Install node modules
      #
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - node-{{ .Branch }}-{{ checksum "./client/package-lock.json" }}
            - node-{{ .Branch }}-
            - node-
      - run:
          name: Install node modules
          command: cd client && npm install
      - save_cache:
          paths:
            - ./client/node_modules
          key: node-{{ .Branch }}-{{ checksum "./client/package-lock.json" }}
      #
      ## Run linter
      #
      - run:
          name: Run linter
          command: |
            export PRONTO_GITHUB_ACCESS_TOKEN=60fc301a32c3a0450eeec2985a1c1a09cefba857
            export PRONTO_PULL_REQUEST_ID=$(git ls-remote -q origin pull\*\head | grep $CIRCLE_SHA1 | sed 's/.*refs\/pull\/\([0-9]*\)\/head/\1/g')
            bundle exec pronto run -f github_status github_pr -c origin/react_update
  backend-test:
    working_directory: ~/TeamDiverst/diverst-development
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    executor: primary-image
    steps:
      - checkout
      - run:
          name: Create artifact directories
          command: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - run:
          name: Set Timezone
          working_directory: ~/TeamDiverst/diverst-development
          command: echo ''America/New_York'' | tee -a /etc/timezone
      - run:
          name: Install gems
          command: bundle install --path=vendor/bundle --jobs=4 --retry=3 && bundle clean
      - run: |-
          mkdir -p config && echo 'test:
            database: circle_ruby_test
            adapter: mysql2
            url: <%= ENV["DATABASE_URL"] %>
            pool: <%= ENV["DB_POOL"] || ENV["MAX_THREADS"] || 20 %>
            encoding: utf8mb4
            collation: utf8mb4_bin
            username: root
            host: localhost
            socket: /var/run/mysqld/mysqld.sock
          ' > config/database.yml
      - run:
          command: bundle exec rake db:create db:schema:load --trace
          environment:
            RAILS_ENV: test
            RACK_ENV: test
      - run: bundle exec rake db:migrate
      - run: mkdir -p $CIRCLE_TEST_REPORTS/rspec
      - run:
          command: bundle exec rspec --color --require spec_helper --format RspecJunitFormatter --out $CIRCLE_TEST_REPORTS/rspec/rspec.xml --format progress -- $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=filesize)
          environment:
            RAILS_ENV: test
            RACK_ENV: test
      - store_test_results:
          path: /tmp/circleci-test-results
      # Save artifacts
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results

  frontend-test:
    working_directory: ~/TeamDiverst/diverst-development/
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    executor: primary-image
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      # Install nvm & frontend libraries
      - run: nvm install 10.16.0 && nvm alias default 10.16.0
      - run: cd client/ && npm install
      - save_cache:
          key: v1-dep-{{ .Branch }}-{{ epoch }}
          paths:
            - ./client/node_modules
      # Run frontend tests
      - run: cd client/ && npm test -- -i
      - store_test_results:
          path: /tmp/circleci-test-results
      # Save artifacts
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results

workflows:
  version: 2.1
  lint-test-deploy:
    jobs:
      - lint
      - backend-test:
          requires:
            - lint
      - frontend-test:
          requires:
            - lint
#      - deploy-react:
#          requires:
#            - backend-test
#            - frontend-test
#          filters:
#            branches:
#              only: react_update
