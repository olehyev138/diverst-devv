version: 2.1
executors:
  primary-image:
    docker:
      - image: awsdiverst/cci-primary:0.0.1
jobs:
  lint:
    working_directory: ~/TeamDiverst/diverst-development
    shell: /bin/bash --login
    executor: primary-image
    steps:
      - checkout
      - run:
          name: Install gems
          command: |
            gem install bundler
            sudo apt-get update && sudo apt-get install cmake
            bundle install --path=vendor/bundle --jobs=4 --retry=3
      - run:
          name: Install Node
          command: |
            set +e
            wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash && sudo /home/circleci/.nvm/nvm.sh
            export NVM_DIR="/home/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            nvm install v13
            echo $(node -v)

      - run:
          #git fetch origin react_update:refs/remotes/origin/react_update
          name: Run linter
          command: |
            export PRONTO_GITHUB_ACCESS_TOKEN=60fc301a32c3a0450eeec2985a1c1a09cefba857
            export PRONTO_PULL_REQUEST_ID=$(git ls-remote -q origin pull\*\head | grep $CIRCLE_SHA1 | sed 's/.*refs\/pull\/\([0-9]*\)\/head/\1/g')
            bundle exec pronto run -f github_status github_pr -c origin/react_update
  backend-test:
    working_directory: ~/TeamDiverst/diverst-development
    parallelism: 2
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    executor: primary-image
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - run:
          working_directory: ~/TeamDiverst/diverst-development
          command: 'echo ''America/New_York'' | sudo tee -a /etc/timezone; sudo dpkg-reconfigure -f noninteractive tzdata; sudo service mysql restart; sudo service postgresql'
      - run: echo -e "export RAILS_ENV=test\nexport RACK_ENV=test" >> $BASH_ENV
      - run: sudo rm -rf /etc/apt/sources.list.d/circleci_trusty.list && sudo rm -rf /etc/apt/sources.list.d/github_git-lfs.list  && sudo rm -rf /etc/apt/sources.list.d/neo4j.list && sudo rm -rf /etc/apt/sources.list.d/mysql.list && sudo rm -rf /etc/apt/sources.list.d/basho_riak.list
      - run:
          name: Install bundler
          command: gem install bundler
      - run:
          name: Install libgit2
          command: sudo apt-get update && sudo apt-get install -y libgit2
      - run: bundle config build.rugged --use-system-libraries
      - run:
          name: Configure bundler to use system libraries
          command: bundle config build.rugged --use-system-libraries
      - run:
          name: Install gems
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - run: |-
          mkdir -p config && echo 'test:
            database: circle_ruby_test
            adapter: mysql2
            url: <%= ENV["DATABASE_URL"] %>
            pool: <%= ENV["DB_POOL"] || ENV["MAX_THREADS"] || 20 %>
            encoding: utf8mb4
            collation: utf8mb4_bin
            username: ubuntu
            host: localhost
            socket: /var/run/mysqld/mysqld.sock
          ' > config/database.yml
      - run:
          command: bundle exec rake db:create db:schema:load --trace
          environment:
            RAILS_ENV: test
            RACK_ENV: test
      - run: bundle exec rake db:migrate
      - run: mkdir -p $CIRCLE_TEST_REPORTS/rspec
      - run:
          command: bundle exec rspec --color --require spec_helper --format RspecJunitFormatter --out $CIRCLE_TEST_REPORTS/rspec/rspec.xml --format progress -- $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=filesize)
          environment:
            RAILS_ENV: test
            RACK_ENV: test
      - store_test_results:
          path: /tmp/circleci-test-results
      # Save artifacts
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results

  frontend-test:
    working_directory: ~/TeamDiverst/diverst-development/
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    executor: primary-image
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      # Install nvm & frontend libraries
      - run: nvm install 10.16.0 && nvm alias default 10.16.0
      - run: cd client/ && npm install
      - run: sudo rm -rf /etc/apt/sources.list.d/circleci_trusty.list && sudo rm -rf /etc/apt/sources.list.d/github_git-lfs.list  && sudo rm -rf /etc/apt/sources.list.d/neo4j.list && sudo rm -rf /etc/apt/sources.list.d/mysql.list && sudo rm -rf /etc/apt/sources.list.d/basho_riak.list
      - save_cache:
          key: v1-dep-{{ .Branch }}-{{ epoch }}
          paths:
            - ./client/node_modules
      # Run frontend tests
      - run: cd client/ && npm test -- -i
      - store_test_results:
          path: /tmp/circleci-test-results
      # Save artifacts
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results

workflows:
  version: 2.1
  lint-test-deploy:
    jobs:
      - lint
      - backend-test:
          requires:
            - lint
      - frontend-test:
          requires:
            - lint
#      - deploy-react:
#          requires:
#            - backend-test
#            - frontend-test
#          filters:
#            branches:
#              only: react_update
